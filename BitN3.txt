#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int mirror(int n);

//  112 группа, Кузнецов Назар
//  Задача - найти первые N чисел, в которых первый байт
//  является зеркальной копией второго
int main(void) {
	char filename[120];
	int N, i, k = 0;
	FILE* file;

	printf("Enter file path:\n");			//  Ввдои имя файла
	scanf("%s", filename);

	if (!(file = fopen(filename, "r"))) {		//  Открываем файл
		printf("Failed to open the file\n");	//  Если не удалосб открыть, выводим сообщение
		return 1;
	}
	
	if (fscanf(file, "%d", &N) != 1) {		//  Читаем N с файла
		printf("Incorrect data\n");
		return 1;
	}

	printf("The first %d numbers, the first two bytes of which are mirrored:\n", N);
	for (i = 0; i < N; i++) {			//  Выводим искомые числа
		if (!mirror(i)) {
			printf("%d ", i);
			k++;
			if (k % 10 == 0) printf("\n");	//  Делаем отступ через каждые 10 чисел
		}
	}

	return 0;
}

//  112 группа, Кузнецов Назар
//  Функция проверяет, является ли первый байт числа
//  зеркальной копией второго, выводит 0, если да, 1 - если нет
int mirror(int n) {
	int kbit = 8;		// К-во бит в байте
	int bit1, bit2;		// Биты
	int i;

	for (i = 0; i < kbit; i++) {
		//  Ищем i-й бит первого байта
		bit1 = 1;
		bit1 <<= i;
		bit1 &= n;
		bit1 >>= i;

		//  Ищем i-й бит второго байта байта
		bit2 = 1;
		bit2 <<= (i + kbit);
		bit2 &= n;
		bit2 >>= (i + kbit);

		//  Если они равны, т.е. не зеркальны возвращаем 1 
		if (bit1 == bit2) return 1;
	}
	return 0;
}